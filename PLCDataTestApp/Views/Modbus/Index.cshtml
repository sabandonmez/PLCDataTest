@model ModbusOperationModel

@{
    ViewData["Title"] = "Modbus Veri Okuma Testi";
}

<h2>@ViewData["Title"]</h2>

<form asp-controller="Modbus" asp-action="Index" method="post" class="needs-validation" novalidate>
    <div class="form-group">
        <label asp-for="IpAddress">IP Adresi:</label>
        <input id="IpAddress" name="IpAddress" type="text" class="form-control" value="@Model.IpAddress" required />
    </div>
    <div class="form-group">
        <label asp-for="Port">Port:</label>
        <input id="Port" name="Port" type="number" class="form-control" value="502" required />
    </div>
    <div class="form-group">
        <label asp-for="SlaveId">Slave ID:</label>
        <input id="SlaveId" name="SlaveId" type="number" class="form-control" value="1" required min="1"
            max="247" />
    </div>
    <div class="form-group">
        <label asp-for="DataAddress">Veri Adresi:</label>
        <input id="DataAddress" name="DataAddress" type="number" class="form-control" value="@Model.DataAddress"
            required />
    </div>

    <div class="form-group">
        <label asp-for="DataSize">Veri Boyutu:</label>
        <select id="DataSize" name="DataSize" class="form-control">
            <option value="1">1</option> //Bit
            <option value="8">8</option> //Byte
            <option value="16">16</option> //Word/Integer
            <option value="32">32</option> //DWord/Float/Long
            <option value="64">64</option> //Double
        </select>
    </div>

    <div class="form-group">
        <label asp-for="DataType">Veri Tipi:</label>
        <select id="DataType" name="DataType" class="form-control">
            <option value="Bit" selected>Bit</option>
            <option value="Byte" selected>Byte</option>
            <option value="Integer" selected>Integer</option>
            <option value="DWord" selected>DWord</option>
            <option value="Long" selected>Long</option>
            <option value="Float" selected>Float</option>
            <option value="Double" selected>Double</option>
            <option value="String" selected>String</option>
        </select>
    </div>
    <div class="form-group">
        <label asp-for="DataSorting">Veri Sıralaması:</label>
        <select id="DataSorting" name="DataSorting" class="form-control">
            <option value="LowHigh" selected>LowHigh</option>
            <option value="HighLow" selected>HighLow</option>
        </select>
    </div>
    <div class="form-group">
        <label asp-for="WriteValue">Yazma Değeri:</label>
        <input id="WriteValue" name="WriteValue" type="text" class="form-control" value="@Model.WriteValue" required />
        <div class="invalid-feedback">Lütfen yazma değerini giriniz.</div>
    </div>

    <div class="form-group">
        <label asp-for="ReadValue">Okuma Değeri:</label>
        <input id="ReadValue" name="ReadValue" type="text" class="form-control" value="@Model.ReadValue" readonly />
    </div>
    <div class="form-group mt-3">
        <button type="button" id="connectButton" class="btn btn-danger">Bağlan</button>
        <button type="submit" class="btn btn-primary">Oku</button>
        <button type="submit" class="btn btn-secondary">Yaz</button>
        <button type="submit" class="btn btn-info">Toplu Okuma</button>
        <button type="submit" class="btn btn-success">Toplu Yazma</button>
        <button type="submit" class="btn btn-warning">Test</button>
    </div>
</form>


    <script>
   document.addEventListener("DOMContentLoaded", function () {
    var connectButton = document.getElementById('connectButton');
    var isConnected = false; // Bağlantı durumunu takip eden değişken

    // toggleConnection fonksiyonunun tanımı
   function toggleConnection() {
    var connectButton = document.getElementById('connectButton');
    if (isConnected) {
        console.log('Bağlantı kesildi.');
        isConnected = false;
        connectButton.textContent = 'Bağlan';
        connectButton.classList.remove('btn-success');
        connectButton.classList.add('btn-danger');
    } else {
        console.log('Bağlandınız.');
        isConnected = true;
        connectButton.textContent = 'Kop';
        connectButton.classList.remove('btn-danger');
        connectButton.classList.add('btn-success');
    }
}

    // Bağlan/Kop butonuna tıklama olayı
    connectButton.addEventListener('click', function () {
        // Bağlan butonuna tıklandığında
        if (!isConnected) {
            var ipAddress = document.getElementById('IpAddress').value;
            var port = document.getElementById('Port').value;
            var slaveId = document.getElementById('SlaveId').value;

            fetch('/Modbus/Index', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.getElementsByName('__RequestVerificationToken')[0].value
                },
                body: `IpAddress=${encodeURIComponent(ipAddress)}&Port=${encodeURIComponent(port)}&SlaveId=${encodeURIComponent(slaveId)}`
            })
                .then(response => response.json())
                .then(data => {
                    if (data === true) {
                        toggleConnection(); // Bağlantı başarılı, durumu güncelle
                    } else {
                        console.error('Bağlanamadınız: ' + (data.message || 'Bilinmeyen hata'));
                    }
                })
                .catch(error => {
                    console.error('Hata:', error);
                });
        } else {
            // Kop butonuna tıklandığında
            toggleConnection(); // Bağlantı durumunu manuel olarak değiştir
        }
    });
});


</script>





